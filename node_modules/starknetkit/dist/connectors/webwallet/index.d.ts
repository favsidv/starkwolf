import type { AccountChangeEventHandler, StarknetWindowObject } from "get-starknet-core";
import type { AccountInterface, ProviderInterface } from "starknet";
import { Connector, type ConnectorData, type ConnectorIcons } from "../connector";
interface WebWalletConnectorOptions {
    url?: string;
    provider?: ProviderInterface;
}
export declare class WebWalletConnector extends Connector {
    private _wallet;
    private _options;
    constructor(options?: WebWalletConnectorOptions);
    available(): boolean;
    ready(): Promise<boolean>;
    get id(): string;
    get name(): string;
    get icon(): ConnectorIcons;
    get wallet(): StarknetWindowObject;
    get title(): string;
    get subtitle(): string;
    connect(): Promise<ConnectorData>;
    disconnect(): Promise<void>;
    account(): Promise<AccountInterface>;
    chainId(): Promise<bigint>;
    initEventListener(accountChangeCb: AccountChangeEventHandler): Promise<void>;
    removeEventListener(accountChangeCb: AccountChangeEventHandler): Promise<void>;
    private ensureWallet;
}
export {};
